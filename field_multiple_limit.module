<?php

/**
 * @file
 * Provides formatter settings to limit the number of values to displayed on
 * multi-value fields.
 */

/**
 * @todo how will this work with HTML5 number inputs?
 *  can we deprecate it?
 */
define('FIELD_MULTIPLE_LIMIT_ALL', -1);


/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function field_multiple_limit_field_formatter_settings_summary_alter(&$summary, $context) {

    $limit = $context['formatter']->getSetting('field_multiple_limit');
    $offset = $context['formatter']->getSetting('field_multiple_limit_offset');
  if ($context['field_definition']->isMultiple()) {

    if (!empty($limit) && $limit != FIELD_MULTIPLE_LIMIT_ALL) {
      $summary[] = t('Displaying @limit values', array('@limit' => $limit));
    }
    else {
      $summary[] = t('Displaying all values');
    }

    if (!empty($offset)) {
      $summary[] = t('Skipping the first @offset values', array('@offset' => $offset));
    }
  }
}

/**
 * Implements hook_field_formatter_third_party_settings_form().
 * 
 * Targets multivalued fields only
 */
function field_multiple_limit_field_formatter_third_party_settings_form(\Drupal\Core\Field\FormatterInterface $plugin, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, $view_mode, $form, $form_state) {
  if ($field_definition->isMultiple()) {

    $element['field_multiple_limit'] = array(
      '#type' => 'number',
      '#title' => t('Number of values to display'),
      '#min' => -1,
      '#default_value' => $context['formatter']->getSetting('field_multiple_limit'),
    );

    $element['field_multiple_limit_offset'] = array(
      '#type' => 'number',
      '#title' => t('Number of values to skip'),
      '#min' => 0,
      '#default_value' => $context['formatter']->getSetting('field_multiple_limit_offset'),
    );
  }
}

/**
 * Implements hook_field_attach_view_alter().
 */
function field_multiple_limit_field_attach_view_alter(&$output, $context) {
  foreach (element_children($output) as $field_name) {

    $entity_type = $output[$field_name]['#entity_type'];
    $bundle      = $output[$field_name]['#bundle'];

    $info = field_formatter_settings_get_instance_display_settings($entity_type, $field_name, $bundle, $context['view_mode']);

    $limit = empty($info['field_multiple_limit']) ? FIELD_MULTIPLE_LIMIT_ALL : $info['field_multiple_limit'];
    $offset = empty($info['field_multiple_limit_offset']) ? 0 : $info['field_multiple_limit_offset'];

    if ($offset > 0 || ($limit != FIELD_MULTIPLE_LIMIT_ALL && $output[$field_name]['#items'] > $limit)) {
      $element = &$output[$field_name];
      $count = 1;
      foreach ($element['#items'] as $delta => $item) {
        if ($delta < $offset) {
          $element[$delta]['#access'] = FALSE;
          continue;
        }
        if ($limit != FIELD_MULTIPLE_LIMIT_ALL && $count > $limit) {
          // @todo This is definitely not the best way to do that. Ideally we
          // should alter the data in such way that no unwanted results are
          // returned.
          $element[$delta]['#access'] = FALSE;
        }
        $count++;
      }
    }
  }
}
